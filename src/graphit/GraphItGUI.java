/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package graphit;

import GraphPanel.GraphPanel.*;
import GraphPanel.Formula.*;
import java.awt.Color;

/**
 *
 * @author Scott Meyer
 */
public class GraphItGUI extends javax.swing.JFrame {

    /**
     * Creates new form GraphItGUI
     */
    public GraphItGUI() {
        color = Color.red;
        form = new Const();
        scale = 10.0;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        formulaBox = new javax.swing.JComboBox();
        formulaLabel = new javax.swing.JLabel();
        paramLabelA = new javax.swing.JLabel();
        paramFieldA = new javax.swing.JTextField();
        paramSliderA = new javax.swing.JSlider();
        paramLabelB = new javax.swing.JLabel();
        paramFieldB = new javax.swing.JTextField();
        paramSliderB = new javax.swing.JSlider();
        paramLabelC = new javax.swing.JLabel();
        paramFieldC = new javax.swing.JTextField();
        paramSliderC = new javax.swing.JSlider();
        paramLabelD = new javax.swing.JLabel();
        paramFieldD = new javax.swing.JTextField();
        paramSliderD = new javax.swing.JSlider();
        paramLabelE = new javax.swing.JLabel();
        paramFieldE = new javax.swing.JTextField();
        paramSliderE = new javax.swing.JSlider();
        resetButton = new javax.swing.JButton();
        zoomInButton = new javax.swing.JButton();
        zoomOutButton = new javax.swing.JButton();
        mainGraphPanel = new GraphPanel.GraphPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        viewMenu = new javax.swing.JMenu();
        zoomInMenuItem = new javax.swing.JMenuItem();
        zoomOutMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        colorMenuItemBlack = new javax.swing.JMenuItem();
        colorMenuItemBlue = new javax.swing.JMenuItem();
        colorMenuItemCyan = new javax.swing.JMenuItem();
        colorMenuItemDarkGray = new javax.swing.JMenuItem();
        colorMenuItemGray = new javax.swing.JMenuItem();
        colorMenuItemGreen = new javax.swing.JMenuItem();
        colorMenuItemLightGray = new javax.swing.JMenuItem();
        colorMenuItemMagenta = new javax.swing.JMenuItem();
        colorMenuItemOrange = new javax.swing.JMenuItem();
        colorMenuItemPink = new javax.swing.JMenuItem();
        colorMenuItemRed = new javax.swing.JMenuItem();
        colorMenuItemYellow = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        formulaBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Constant", "Line", "Quadratic", "Cubic", "Quartic", "lnX", "Power of E", "Power of X", "X Squared", "X Cubed", "Sine", "Cosine", "Tangent", "Secant", "Cosecant", "Cotangent", "Arcsine", "Arccosine", "Arctangent", "Arcsecant", "Arccosecant", "Arccotangent" }));
        formulaBox.setSelectedIndex(-1);
        formulaBox.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                formulaBoxAncestorRemoved(evt);
            }
        });
        formulaBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formulaBoxActionPerformed(evt);
            }
        });
        formulaBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formulaBoxPropertyChange(evt);
            }
        });

        formulaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formulaLabel.setText(" ");

        paramLabelA.setText("a:");

        paramFieldA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paramFieldA.setText("0.0");
        paramFieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramFieldAActionPerformed(evt);
            }
        });
        paramFieldA.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                paramFieldAPropertyChange(evt);
            }
        });

        paramSliderA.setMaximum(10000);
        paramSliderA.setMinimum(-10000);
        paramSliderA.setValue(0);
        paramSliderA.setEnabled(false);
        paramSliderA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                paramSliderAStateChanged(evt);
            }
        });

        paramLabelB.setText("b:");

        paramFieldB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paramFieldB.setText("0.0");
        paramFieldB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramFieldBActionPerformed(evt);
            }
        });
        paramFieldB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                paramFieldBPropertyChange(evt);
            }
        });

        paramSliderB.setMaximum(10000);
        paramSliderB.setMinimum(-10000);
        paramSliderB.setValue(0);
        paramSliderB.setEnabled(false);
        paramSliderB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                paramSliderBStateChanged(evt);
            }
        });

        paramLabelC.setText("c:");

        paramFieldC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paramFieldC.setText("0.0");
        paramFieldC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramFieldCActionPerformed(evt);
            }
        });
        paramFieldC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                paramFieldCPropertyChange(evt);
            }
        });

        paramSliderC.setMaximum(10000);
        paramSliderC.setMinimum(-10000);
        paramSliderC.setValue(0);
        paramSliderC.setEnabled(false);
        paramSliderC.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                paramSliderCStateChanged(evt);
            }
        });

        paramLabelD.setText("d:");

        paramFieldD.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paramFieldD.setText("0.0");
        paramFieldD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramFieldDActionPerformed(evt);
            }
        });
        paramFieldD.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                paramFieldDPropertyChange(evt);
            }
        });

        paramSliderD.setMaximum(10000);
        paramSliderD.setMinimum(-10000);
        paramSliderD.setValue(0);
        paramSliderD.setEnabled(false);
        paramSliderD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                paramSliderDStateChanged(evt);
            }
        });

        paramLabelE.setText("e:");

        paramFieldE.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paramFieldE.setText("0.0");
        paramFieldE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramFieldEActionPerformed(evt);
            }
        });
        paramFieldE.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                paramFieldEPropertyChange(evt);
            }
        });

        paramSliderE.setMaximum(10000);
        paramSliderE.setMinimum(-10000);
        paramSliderE.setValue(0);
        paramSliderE.setEnabled(false);
        paramSliderE.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                paramSliderEStateChanged(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        zoomInButton.setText("Zoom In");
        zoomInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInButtonActionPerformed(evt);
            }
        });

        zoomOutButton.setText("Zoom Out");
        zoomOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(paramSliderA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(paramSliderB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(paramSliderC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(paramSliderD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(paramSliderE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formulaBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(formulaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(zoomInButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(zoomOutButton))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addComponent(paramLabelA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paramFieldA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addComponent(paramLabelB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paramFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addComponent(paramLabelC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paramFieldC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addComponent(paramLabelD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paramFieldD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addComponent(paramLabelE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paramFieldE, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(resetButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formulaBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formulaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramLabelA)
                    .addComponent(paramFieldA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paramSliderA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramLabelB)
                    .addComponent(paramFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paramSliderB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramLabelC)
                    .addComponent(paramFieldC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paramSliderC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramLabelD)
                    .addComponent(paramFieldD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paramSliderD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramLabelE)
                    .addComponent(paramFieldE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paramSliderE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zoomInButton)
                    .addComponent(zoomOutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(resetButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainGraphPanelLayout = new javax.swing.GroupLayout(mainGraphPanel);
        mainGraphPanel.setLayout(mainGraphPanelLayout);
        mainGraphPanelLayout.setHorizontalGroup(
            mainGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        mainGraphPanelLayout.setVerticalGroup(
            mainGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        viewMenu.setText("View");

        zoomInMenuItem.setText("Zoom In");
        zoomInMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomInMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(zoomInMenuItem);

        zoomOutMenuItem.setText("Zoom Out");
        zoomOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomOutMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(zoomOutMenuItem);

        jMenu2.setText("Color");

        colorMenuItemBlack.setText("Black");
        colorMenuItemBlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemBlackActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemBlack);

        colorMenuItemBlue.setText("Blue");
        colorMenuItemBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemBlueActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemBlue);

        colorMenuItemCyan.setText("Cyan");
        colorMenuItemCyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemCyanActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemCyan);

        colorMenuItemDarkGray.setText("Dark Gray");
        colorMenuItemDarkGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemDarkGrayActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemDarkGray);

        colorMenuItemGray.setText("Gray");
        colorMenuItemGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemGrayActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemGray);

        colorMenuItemGreen.setText("Green");
        colorMenuItemGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemGreenActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemGreen);

        colorMenuItemLightGray.setText("Light Gray");
        colorMenuItemLightGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemLightGrayActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemLightGray);

        colorMenuItemMagenta.setText("Magenta");
        colorMenuItemMagenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemMagentaActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemMagenta);

        colorMenuItemOrange.setText("Orange");
        colorMenuItemOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemOrangeActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemOrange);

        colorMenuItemPink.setText("Pink");
        colorMenuItemPink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemPinkActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemPink);

        colorMenuItemRed.setText("Red");
        colorMenuItemRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemRedActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemRed);

        colorMenuItemYellow.setText("Yellow");
        colorMenuItemYellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuItemYellowActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenuItemYellow);
        jMenu2.add(jSeparator1);

        viewMenu.add(jMenu2);

        jMenuBar1.add(viewMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paramSliderEStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_paramSliderEStateChanged
        if( form.getParams().length > 4 ) {
            double temp = paramSliderE.getValue() / 1000.0;
            paramFieldE.setText( Double.toString( temp ) );
            form.setParam( 4, temp );
            mainGraphPanel.setFormula(form);
        }
    }//GEN-LAST:event_paramSliderEStateChanged

    private void paramSliderDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_paramSliderDStateChanged
        if( form.getParams().length > 3 ) {
            double temp = paramSliderD.getValue() / 1000.0;
            paramFieldD.setText( Double.toString( temp ) );
            form.setParam( 3, temp );
            mainGraphPanel.setFormula(form);
        }
    }//GEN-LAST:event_paramSliderDStateChanged

    private void paramSliderCStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_paramSliderCStateChanged
        if( form.getParams().length > 2 ) {
            double temp = paramSliderC.getValue() / 1000.0;
            paramFieldC.setText( Double.toString( temp ) );
            form.setParam( 2, temp);
            mainGraphPanel.setFormula(form);
        }
    }//GEN-LAST:event_paramSliderCStateChanged

    private void paramSliderBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_paramSliderBStateChanged
        if( form.getParams().length > 1 ) {
            double temp = paramSliderB.getValue() / 1000.0;
            paramFieldB.setText( Double.toString( temp ) );
            form.setParam( 1, temp);
            mainGraphPanel.setFormula(form);
        }
    }//GEN-LAST:event_paramSliderBStateChanged

    private void paramSliderAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_paramSliderAStateChanged
        if( form.getParams().length > 0 ) {
            double temp = paramSliderA.getValue() / 1000.0;
            paramFieldA.setText( Double.toString( temp ) );
            form.setParam( 0, temp);
            mainGraphPanel.setFormula(form);
        }
    }//GEN-LAST:event_paramSliderAStateChanged

    private void formulaBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formulaBoxPropertyChange

    }//GEN-LAST:event_formulaBoxPropertyChange

    private void formulaBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formulaBoxActionPerformed
        if( formulaBox.getSelectedIndex() != -1 ) {
            switch( formulaBox.getSelectedIndex() ) {
                case 0: form = new Const( new double[] { new Double( paramFieldA.getText() ) } );
                break;
                case 1: form = new Linear( new double[] { 
                                    new Double( paramFieldA.getText() ), 
                                    new Double( paramFieldB.getText() ) 
                                    } );
                break;
                case 2: form = new Quadratic( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() )
                                    } );
                break;
                case 3: form = new Cubic( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 4: form = new Quartic( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() ),
                                    new Double( paramFieldE.getText() )
                                    } );
                break;
                case 5: form = new LnX( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() )
                                    } );
                break;
                case 6: form = new PowerOfE( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() )
                                    } );
                break;
                case 7: form = new PowerOfX( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() )
                                    } );
                break;
                case 8: form = new X2( new double[] {
                                    new Double( paramFieldA.getText() )
                                    } );
                break;
                case 9: form = new X3( new double[] {
                                    new Double( paramFieldA.getText() )
                                    } );
                break;
                case 10: form = new Sin( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 11: form = new Cos( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 12: form = new Tan( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 13: form = new Sec( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 14: form = new Csc( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 15: form = new Cot( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 16: form = new Asin( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 17: form = new Acos( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 18: form = new Atan( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 19: form = new Asec( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 20: form = new Acsc( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
                case 21: form = new Acot( new double[] {
                                    new Double( paramFieldA.getText() ),
                                    new Double( paramFieldB.getText() ),
                                    new Double( paramFieldC.getText() ),
                                    new Double( paramFieldD.getText() )
                                    } );
                break;
            }

            formulaLabel.setText( form.getLabel() );
            form.setColor( color );

            paramSliderA.setEnabled( true );
            paramSliderB.setEnabled( true );
            paramSliderC.setEnabled( true );
            paramSliderD.setEnabled( true );
            paramSliderE.setEnabled( true );

            switch( form.getParams().length ) {
                case 1: paramSliderB.setEnabled( false );
                        paramSliderB.setValue( 0 );
                        paramFieldB.setText( "0.0" );
                case 2: paramSliderC.setEnabled( false );
                        paramSliderC.setValue( 0 );
                        paramFieldC.setText( "0.0" );
                case 3: paramSliderD.setEnabled( false );
                        paramSliderD.setValue( 0 );
                        paramFieldD.setText( "0.0" );
                case 4: paramSliderE.setEnabled( false );
                        paramSliderE.setValue( 0 );
                        paramFieldE.setText( "0.0" );
            }

            mainGraphPanel.setGraphing( true );
            mainGraphPanel.setFormula( form );
        }

    }//GEN-LAST:event_formulaBoxActionPerformed

    private void formulaBoxAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formulaBoxAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formulaBoxAncestorRemoved

    private void paramFieldAPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_paramFieldAPropertyChange
        
    }//GEN-LAST:event_paramFieldAPropertyChange

    private void paramFieldBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_paramFieldBPropertyChange
        
    }//GEN-LAST:event_paramFieldBPropertyChange

    private void paramFieldCPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_paramFieldCPropertyChange
        
    }//GEN-LAST:event_paramFieldCPropertyChange

    private void paramFieldDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_paramFieldDPropertyChange
        
    }//GEN-LAST:event_paramFieldDPropertyChange

    private void paramFieldEPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_paramFieldEPropertyChange
        
    }//GEN-LAST:event_paramFieldEPropertyChange

    private void paramFieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramFieldAActionPerformed
        if( evt.getSource() != this ) {
            Double temp = new Double ( paramFieldA.getText() );
            form.setParam( 0, temp.doubleValue() );
            mainGraphPanel.setFormula( form );
        }
    }//GEN-LAST:event_paramFieldAActionPerformed

    private void paramFieldBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramFieldBActionPerformed
        if( evt.getSource() != this ) {
            Double temp = new Double ( paramFieldB.getText() );
            form.setParam( 1, temp.doubleValue() );
            mainGraphPanel.setFormula( form );
        }
    }//GEN-LAST:event_paramFieldBActionPerformed

    private void paramFieldCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramFieldCActionPerformed
        if( evt.getSource() != this ) {
            Double temp = new Double ( paramFieldC.getText() );
            form.setParam( 2, temp.doubleValue() );
            mainGraphPanel.setFormula( form );
        }
    }//GEN-LAST:event_paramFieldCActionPerformed

    private void paramFieldDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramFieldDActionPerformed
        if( evt.getSource() != this ) {
            Double temp = new Double ( paramFieldD.getText() );
            form.setParam( 3, temp.doubleValue() );
            mainGraphPanel.setFormula( form );
        }
    }//GEN-LAST:event_paramFieldDActionPerformed

    private void paramFieldEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramFieldEActionPerformed
        if( evt.getSource() != this ) {
            Double temp = new Double ( paramFieldE.getText() );
            form.setParam( 4, temp );
            mainGraphPanel.setFormula( form );
        }
    }//GEN-LAST:event_paramFieldEActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        if( evt.getSource() != null ) {
            mainGraphPanel.setGraphing( false );
            mainGraphPanel.setScale( 10.0 );
            mainGraphPanel.setOrigin( new java.awt.Point( 0, 0 ) );
            paramSliderA.setValue( 0 );
            paramSliderB.setValue( 0 );
            paramSliderC.setValue( 0 );
            paramSliderD.setValue( 0 );
            paramSliderE.setValue( 0 );
            scale = 10.0;
            mainGraphPanel.setScale( scale );
            form = null;
            formulaBox.setSelectedIndex( -1 );
            formulaLabel.setText(" ");
        }
    }//GEN-LAST:event_resetButtonActionPerformed

    private void zoomInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInButtonActionPerformed
        scale /= 2.0;
        mainGraphPanel.setScale( scale );
    }//GEN-LAST:event_zoomInButtonActionPerformed

    private void zoomOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutButtonActionPerformed
        scale *= 2.0;
        mainGraphPanel.setScale( scale );
    }//GEN-LAST:event_zoomOutButtonActionPerformed

    private void colorMenuItemBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemBlueActionPerformed
        color = Color.BLUE;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemBlueActionPerformed

    private void zoomInMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomInMenuItemActionPerformed
        scale /= 2.0;
        mainGraphPanel.setScale( scale );
    }//GEN-LAST:event_zoomInMenuItemActionPerformed

    private void colorMenuItemBlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemBlackActionPerformed
        color = Color.BLACK;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemBlackActionPerformed

    private void colorMenuItemMagentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemMagentaActionPerformed
        color = Color.MAGENTA;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemMagentaActionPerformed

    private void colorMenuItemCyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemCyanActionPerformed
        color = Color.CYAN;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemCyanActionPerformed

    private void colorMenuItemDarkGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemDarkGrayActionPerformed
        color = Color.DARK_GRAY;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemDarkGrayActionPerformed

    private void colorMenuItemGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemGrayActionPerformed
        color = Color.GRAY;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemGrayActionPerformed

    private void colorMenuItemGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemGreenActionPerformed
        color = Color.GREEN;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemGreenActionPerformed

    private void colorMenuItemLightGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemLightGrayActionPerformed
        color = Color.LIGHT_GRAY;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemLightGrayActionPerformed

    private void colorMenuItemOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemOrangeActionPerformed
        color = Color.ORANGE;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemOrangeActionPerformed

    private void colorMenuItemPinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemPinkActionPerformed
        color = Color.PINK;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemPinkActionPerformed

    private void colorMenuItemRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemRedActionPerformed
        color = Color.RED;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemRedActionPerformed

    private void colorMenuItemYellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuItemYellowActionPerformed
        color = Color.YELLOW;
        mainGraphPanel.setColor( color );
    }//GEN-LAST:event_colorMenuItemYellowActionPerformed

    private void zoomOutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomOutMenuItemActionPerformed
        scale *= 2.0;
        mainGraphPanel.setScale( scale );
    }//GEN-LAST:event_zoomOutMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphItGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphItGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphItGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphItGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphItGUI().setVisible(true);
            }
        });
    }
    
    private GraphPanel.Formula form;
    private Color color;
    private double scale;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem colorMenuItemBlack;
    private javax.swing.JMenuItem colorMenuItemBlue;
    private javax.swing.JMenuItem colorMenuItemCyan;
    private javax.swing.JMenuItem colorMenuItemDarkGray;
    private javax.swing.JMenuItem colorMenuItemGray;
    private javax.swing.JMenuItem colorMenuItemGreen;
    private javax.swing.JMenuItem colorMenuItemLightGray;
    private javax.swing.JMenuItem colorMenuItemMagenta;
    private javax.swing.JMenuItem colorMenuItemOrange;
    private javax.swing.JMenuItem colorMenuItemPink;
    private javax.swing.JMenuItem colorMenuItemRed;
    private javax.swing.JMenuItem colorMenuItemYellow;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JComboBox formulaBox;
    private javax.swing.JLabel formulaLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private GraphPanel.GraphPanel mainGraphPanel;
    private javax.swing.JTextField paramFieldA;
    private javax.swing.JTextField paramFieldB;
    private javax.swing.JTextField paramFieldC;
    private javax.swing.JTextField paramFieldD;
    private javax.swing.JTextField paramFieldE;
    private javax.swing.JLabel paramLabelA;
    private javax.swing.JLabel paramLabelB;
    private javax.swing.JLabel paramLabelC;
    private javax.swing.JLabel paramLabelD;
    private javax.swing.JLabel paramLabelE;
    private javax.swing.JSlider paramSliderA;
    private javax.swing.JSlider paramSliderB;
    private javax.swing.JSlider paramSliderC;
    private javax.swing.JSlider paramSliderD;
    private javax.swing.JSlider paramSliderE;
    private javax.swing.JButton resetButton;
    private javax.swing.JMenu viewMenu;
    private javax.swing.JButton zoomInButton;
    private javax.swing.JMenuItem zoomInMenuItem;
    private javax.swing.JButton zoomOutButton;
    private javax.swing.JMenuItem zoomOutMenuItem;
    // End of variables declaration//GEN-END:variables
}
